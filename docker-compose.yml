version: '3.9'

services:
  # DB service
  mysql:
    image: mysql:8.0
    # get user/password from env file
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-password}
      - MYSQL_USER=${MYSQL_USER:-user}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-password}
      - MYSQL_DATABASE=${MYSQL_DATABASE:-test}
    ports:
      - 3306:3306
    # check if service is ready to handle requests
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $${MYSQL_USER:-user} --password=$${MYSQL_PASSWORD:-password}
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 20s
    # persist locally
    volumes:
      - db-data:/etc/mysql/data
    restart: unless-stopped

  # Backend service
  api:
    environment:
      - PORT=$API_PORT
      - MYSQL_HOST=mysql # set the host to the ip address of the mysql service
      - MYSQL_USER=${MYSQL_USER:-user}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-password}
      - MYSQL_DATABASE=${MYSQL_DATABASE:-test}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY:-stripe-sk-key}
      - STRIPE_WEBHOOK_KEY=${STRIPE_WEBHOOK_KEY:-stripe-webhook-key}
      - JWT_SECRET=${JWT_SECRET:-jwt-secret}
      - EMAIL_SERVICE=${EMAIL_SERVICE:-email-service}
      - EMAIL_USERNAME=${EMAIL_USERNAME:-email-username}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD:-email-password}
    image: api
    # wait for mysql to start
    depends_on:
      mysql:
        condition: service_healthy
    build: ./api/
    ports:
      - ${API_PORT:-3000}:${API_PORT:-3000}
    restart: unless-stopped
    command: ["sh", "-c", "npx sequelize db:migrate:undo:all && npx sequelize db:migrate && npx sequelize db:seed:all && npm run dev"]

  # Frontend service
  client:
    environment:
      - PORT=${CLIENT_PORT:-8000}
      - REACT_APP_BASE_URL=${REACT_APP_BASE_URL:-app-base-url}:${CLIENT_PORT:-8000}
      - REACT_APP_API_BASE_URL=${REACT_APP_API_BASE_URL:-api-base-url}:${API_PORT:-3000}
    image: client
    depends_on:
      - api
    build: ./client/
    ports:
      - ${CLIENT_PORT:-8000}:${CLIENT_PORT:-8000}

  stripe-cli:
    image: stripe/stripe-cli
    container_name: stripe-cli
    command: "listen --api-key ${STRIPE_SECRET_KEY:-stripe-sk-key} --forward-to http://host.docker.internal:${API_PORT:-3000}/webhook"

volumes:
  db-data:
